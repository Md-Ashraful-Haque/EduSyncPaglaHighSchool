# Generated by Django 5.1.4 on 2025-07-22 16:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('ims_01_institute', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('teacher', 'Teacher'), ('student', 'Student'), ('guardian', 'Guardian'), ('staff', 'Staff')], max_length=20)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='user_profiles/')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_permission_user_set', to='auth.permission')),
            ],
            options={
                'verbose_name_plural': '01 Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=128)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='admin_images/')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Admins', to='ims_01_institute.institute')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '02 Admins',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Staff', to='ims_01_institute.institute')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '07 Staffs',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('roll_number', models.CharField(max_length=20)),
                ('student_id', models.CharField(editable=False, max_length=15, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('dob', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=15, unique=True)),
                ('guardian_mobile_number', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField(blank=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='student_images/')),
                ('class_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='ims_01_institute.class')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='ims_01_institute.group')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='ims_01_institute.institute')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='ims_01_institute.section')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='ims_01_institute.year')),
            ],
            options={
                'verbose_name_plural': '04 Students',
            },
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Guardians', to='ims_01_institute.institute')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guardian_profile', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(related_name='guardians', to='ims_02_account.student')),
            ],
            options={
                'verbose_name_plural': '06 Guardians',
            },
        ),
        migrations.CreateModel(
            name='StudentClassHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField(blank=True, null=True)),
                ('class_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims_01_institute.class', verbose_name='Class')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ims_01_institute.group', verbose_name='Group')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims_01_institute.institute', verbose_name='Institute')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims_01_institute.section', verbose_name='Section')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_history', to=settings.AUTH_USER_MODEL)),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims_01_institute.year', verbose_name='Year')),
            ],
            options={
                'verbose_name_plural': '05 StudentClassHistories',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=128)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('designation', models.CharField(choices=[('assistant_teacher', 'Assistant Teacher'), ('assistant_head_teacher', 'Assistant Head Teacher'), ('head_teacher', 'Head Teacher'), ('lecturer', 'Lecturer'), ('assistant_professor', 'Assistant Professor'), ('professor', 'Professor'), ('principal', 'Principal')], default='assistant_teacher', max_length=50, verbose_name='Designation')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='teacher_picture/')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='teacher_signature/')),
                ('allow_all_subject', models.BooleanField(default=False, verbose_name='Allow All Subjects')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Teachers', to='ims_01_institute.institute')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '03 Teachers',
            },
        ),
        migrations.CreateModel(
            name='TeacherSubjectAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims_01_institute.class')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims_01_institute.group')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims_01_institute.section')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims_01_institute.subjectforims')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_subject_assignments', to='ims_02_account.teacher')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims_01_institute.year')),
            ],
            options={
                'verbose_name': 'Teacher Subject Assignment',
                'verbose_name_plural': 'Teacher Subject Assignments',
            },
        ),
        migrations.AddField(
            model_name='teacher',
            name='subject_assignments',
            field=models.ManyToManyField(related_name='assigned_teachers', through='ims_02_account.TeacherSubjectAssignment', to='ims_01_institute.subjectforims'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='ims_02_acco_usernam_4214bf_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['institute', 'year', 'class_instance', 'group', 'section', 'roll_number'], name='ims_02_acco_institu_f5b400_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='student',
            unique_together={('section', 'roll_number')},
        ),
        migrations.AlterUniqueTogether(
            name='teachersubjectassignment',
            unique_together={('teacher', 'year', 'class_instance', 'group', 'section', 'subject')},
        ),
    ]
